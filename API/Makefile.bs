PROJ_NAME := $(PROJECT_NAME)-$(VERSION)
OUTPUT_DIRECTORY := _build
TARGETS := $(PROJ_NAME)
PROJ_DIR := .
SDK_ROOT := $(NORDIC_SDK_PATH)


$(OUTPUT_DIRECTORY)/$(PROJ_NAME).out: \
  LINKER_SCRIPT  := $(BLUESTACK_PATH)/blank_gcc_nrf52.ld

SRC_FILES += $(SOURCE_FILES)
# Source files common to all targets
SRC_FILES += \
  $(SDK_ROOT)/components/toolchain/gcc/gcc_startup_nrf52.S \
  $(SDK_ROOT)/components/toolchain/system_nrf52.c \
  $(SDK_ROOT)/components/libraries/util/app_error.c \
  $(SDK_ROOT)/components/libraries/util/app_error_weak.c \
  $(SDK_ROOT)/components/libraries/util/app_util_platform.c \
  $(SDK_ROOT)/components/libraries/strerror/nrf_strerror.c \

#$(SDK_ROOT)/components/boards/boards.c \

INC_FOLDERS += $(INCLUDE_FOLDERS)
# Include folders common to all targets
INC_FOLDERS += \
  $(SDK_ROOT)/components \
  $(SDK_ROOT)/components/libraries/experimental_memobj \
  $(SDK_ROOT)/components/libraries/experimental_section_vars \
  $(SDK_ROOT)/components/toolchain \
  $(SDK_ROOT)/components/libraries/util \
  $(SDK_ROOT)/components/libraries/balloc \
  $(SDK_ROOT)/components/libraries/experimental_log \
  $(SDK_ROOT)/components/libraries/experimental_log/src \
  $(SDK_ROOT)/components/toolchain/gcc \
  $(SDK_ROOT)/components/libraries/bsp \
  $(SDK_ROOT)/components/drivers_nrf/nrf_soc_nosd \
  $(SDK_ROOT)/components/device \
  $(SDK_ROOT)/components/boards \
  $(SDK_ROOT)/components/drivers_nrf/delay \
  $(SDK_ROOT)/components/toolchain/cmsis/include \
  $(SDK_ROOT)/components/drivers_nrf/hal \
  $(SDK_ROOT)/components/libraries/strerror \

# Libraries common to all targets
LIB_FILES += \

# Optimization flags
OPT = -O3 -g3
# Uncomment the line below to enable link time optimization
#OPT += -flto

# C flags common to all targets
CFLAGS += $(OPT)
CFLAGS += -DBOARD_PCA10040
CFLAGS += -DBSP_DEFINES_ONLY
CFLAGS += -DCONFIG_GPIO_AS_PINRESET
CFLAGS += -DNRF52
CFLAGS += -DNRF52832_XXAA
CFLAGS += -DNRF52_PAN_74
CFLAGS += -mcpu=cortex-m4
CFLAGS += -mthumb -mabi=aapcs
CFLAGS +=  -Wall -Werror
CFLAGS += -mfloat-abi=hard -mfpu=fpv4-sp-d16
# keep every function in a separate section, this allows linker to discard unused ones
CFLAGS += -ffunction-sections -fdata-sections -fno-strict-aliasing
CFLAGS += -fno-builtin -fshort-enums 

# C++ flags common to all targets
CXXFLAGS += $(OPT)

# Assembler flags common to all targets
ASMFLAGS += -g3
ASMFLAGS += -mcpu=cortex-m4
ASMFLAGS += -mthumb -mabi=aapcs
ASMFLAGS += -mfloat-abi=hard -mfpu=fpv4-sp-d16
ASMFLAGS += -DBOARD_PCA10040
ASMFLAGS += -DBSP_DEFINES_ONLY
ASMFLAGS += -DCONFIG_GPIO_AS_PINRESET
ASMFLAGS += -DNRF52
ASMFLAGS += -DNRF52832_XXAA
ASMFLAGS += -DNRF52_PAN_74

# Linker flags
LDFLAGS += $(OPT)
LDFLAGS += -mthumb -mabi=aapcs -L $(TEMPLATE_PATH) -T$(LINKER_SCRIPT)
LDFLAGS += -mcpu=cortex-m4
LDFLAGS += -mfloat-abi=hard -mfpu=fpv4-sp-d16
# let linker dump unused sections
LDFLAGS += -Wl,--gc-sections
# use newlib in nano version
LDFLAGS += --specs=nano.specs


# Add standard libraries at the very end of the linker input, after all objects
# that may need symbols provided by these libraries.
LIB_FILES += -lc -lnosys -lm


.PHONY: default help

# Default target - first one defined
default: $(PROJ_NAME)

# Print all targets that can be built
help:
	@echo following targets are available:
	@echo 	nrf52832_xxaa

TEMPLATE_PATH := $(SDK_ROOT)/components/toolchain/gcc

include $(TEMPLATE_PATH)/Makefile.common

$(foreach target, $(TARGETS), $(call define_target, $(target)))

.PHONY: flash erase clean

# Flash the program
flash: $(MAKECMDGOALS)
	@echo "device $(DEVICE)_$(MODEL)" > $(OUTPUT_DIRECTORY)/jlink_script_flash.jlink
	@echo "w4 4001e504 1" >> $(OUTPUT_DIRECTORY)/jlink_script_flash.jlink
	@echo "loadfile $(OUTPUT_DIRECTORY)/$(PROJ_NAME).hex" >> $(OUTPUT_DIRECTORY)/jlink_script_flash.jlink
	@echo "r" >> $(OUTPUT_DIRECTORY)/jlink_script_flash.jlink
	@echo "g" >> $(OUTPUT_DIRECTORY)/jlink_script_flash.jlink
	@echo "q" >> $(OUTPUT_DIRECTORY)/jlink_script_flash.jlink
	@JLinkExe $(OUTPUT_DIRECTORY)/jlink_script_flash.jlink

erase:
	@echo "device $(DEVICE)_$(MODEL)" > $(OUTPUT_DIRECTORY)/jlink_script_erase.jlink
	@echo "w4 4001e504 2" >> $(OUTPUT_DIRECTORY)/jlink_script_erase.jlink
	@echo "w4 4001e50c 1" >> $(OUTPUT_DIRECTORY)/jlink_script_erase.jlink
	@echo "w4 4001e514 1" >> $(OUTPUT_DIRECTORY)/jlink_script_erase.jlink
	@echo "r" >> $(OUTPUT_DIRECTORY)/jlink_script_erase.jlink
	@echo "q" >> $(OUTPUT_DIRECTORY)/jlink_script_erase.jlink
	@JLinkExe $(OUTPUT_DIRECTORY)/jlink_script_erase.jlink

reset:
	@echo "device $(DEVICE)_$(MODEL)" > $(OUTPUT_DIRECTORY)/jlink_script_reset.jlink
	@echo "r" >> $(OUTPUT_DIRECTORY)/jlink_script_reset.jlink
	@echo "q" >> $(OUTPUT_DIRECTORY)/jlink_script_reset.jlink
	@JLinkExe $(OUTPUT_DIRECTORY)/jlink_script_reset.jlink

flash-softdevice: erase
	@echo "device $(DEVICE)_$(MODEL)" > $(OUTPUT_DIRECTORY)/jlink_script_softdevice.jlink
	@echo "w4 4001e504 1" >> $(OUTPUT_DIRECTORY)/jlink_script_softdevice.jlink
	@echo "loadfile BlueStack/softdevice/s132_nrf52.hex" >> $(OUTPUT_DIRECTORY)/jlink_script_softdevice.jlink
	@echo "r" >> $(OUTPUT_DIRECTORY)/jlink_script_softdevice.jlink
	@echo "q" >> $(OUTPUT_DIRECTORY)/jlink_script_softdevice.jlink
	@JLinkExe $(OUTPUT_DIRECTORY)/jlink_script_softdevice.jlink